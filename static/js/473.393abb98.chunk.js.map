{"version":3,"file":"static/js/473.393abb98.chunk.js","mappings":"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","sources":["Pages/MovieDetails.jsx"],"sourcesContent":["import { Suspense, lazy, useEffect, useRef, useState } from \"react\";\nimport { Link, NavLink, Route, Routes, useLocation, useParams } from \"react-router-dom\";\nimport { getMovieById } from \"services/movieService\";\nimport { STATUSES } from \"utils/Constans\";\nimport css from '../components/App.module.css'\n\nconst Cast = lazy(() => import('Pages/Cast'))\nconst Reviews = lazy(()=> import('Pages/Reviews'))\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [statuses, setStatuses] = useState(STATUSES.idle);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  console.log('details location',location)\n  const backLinkRef = useRef(location.state?.from ?? \"/\")\n\n\n  const {movieId} = useParams();\n\n  useEffect(() => {\n    \n    const getDetails = async () => {\n      try {\n        setStatuses(STATUSES.pending)\n\n        const data = await getMovieById(movieId)\n        setMovieDetails(data);\n        setStatuses(STATUSES.success)\n      }\n      catch (error) {\n        setStatuses(STATUSES.error);\n        setError(error);\n      }\n    }\n    if (movieDetails === null) {\n      getDetails()\n    }\n    \n  }, [movieId, movieDetails ])\n  \n  \n  return (\n    <>\n      {statuses === STATUSES.pending && <div>Loading...</div>}\n      {statuses === STATUSES.error && error && <div>{error.message}</div>}\n      \n      {movieDetails && \n        <div>\n        <Link to={backLinkRef.current}>Go back</Link>\n        <img src=\"\" alt=\"\" />\n        <div>\n          <h2>{movieDetails.title}</h2>\n          <p></p>\n          <h3>movie</h3>\n          <p></p>\n          <h3>movie</h3>\n          <p></p>\n        </div>\n          <NavLink to='cast' className={({isActive}) => `${css.navLink} ${isActive? css.active : ''}`}>Cast</NavLink>\n          <NavLink to='reviews' className={({ isActive }) => `${css.navLink} ${isActive ? css.active : ''}`}>Reviews</NavLink>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Routes >\n              <Route path=\"/cast\" element={<Cast movieId={movieId}></Cast>}></Route>\n              <Route path=\"/reviews\" element={<Reviews movieId={movieId}></Reviews>}></Route>\n            </Routes>\n          </Suspense>\n    </div>}\n    </>\n    )\n}\n\nexport default MovieDetails;"],"names":["Cast","lazy","Reviews","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","_useState3","STATUSES","_useState4","statuses","setStatuses","_useState5","_useState6","error","setError","location","useLocation","console","log","backLinkRef","useRef","state","from","movieId","useParams","useEffect","getDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getMovieById","sent","t0","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","message","Link","to","current","src","alt","title","NavLink","className","_ref2","isActive","concat","css","_ref3","Suspense","fallback","Routes","Route","path","element"],"sourceRoot":""}