{"version":3,"file":"static/js/695.4e39295d.chunk.js","mappings":"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","sources":["components/SearchForm/SearchForm.jsx","Pages/Movies.jsx","components/MoviesList/MoviesList.jsx"],"sourcesContent":["export const SearchForm = ({ onSubmit, query }) => {\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <button type=\"submit\">\n          <span>Search</span>\n        </button>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          name='searchText'\n          defaultValue={query}\n        />\n      </form>\n    </div>\n  )\n}","import { useEffect, useState } from \"react\";\nimport { STATUSES } from \"utils/Constans\";\nimport { getMovieByTitle } from \"services/movieService\";\nimport { MoviesList } from \"components/MoviesList/MoviesList\";\nimport { SearchForm } from \"components/SearchForm/SearchForm\";\nimport { useSearchParams } from \"react-router-dom\";\n\nconst Movies = () => {\n  const [searchText, setSearchText] = useState('');\n  const [searchedMovies, setSearchedMovies] = useState(null);\n  const [statuses, setStatuses] = useState(STATUSES.idle);\n  const [error, setError] = useState(null);\n  const [hasMounted, setHasMounted] = useState(false)\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('q')\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n    const newSearchText = e.currentTarget.elements.searchText.value.trim();\n    if (!newSearchText || newSearchText === searchText) {\n      return;\n    }\n    setSearchParams({\n      q: newSearchText\n    })\n    setSearchText(newSearchText);\n    if (!hasMounted) {\n      setHasMounted(true)\n    }\n  }\n\n  useEffect(() => {\n    if (hasMounted) {\n      const getMovieBySearch = async () => {\n        try {\n          setStatuses(STATUSES.pending)\n          const data = await getMovieByTitle(searchText);\n          if (data.results.length > 0) {\n            setSearchedMovies(data)\n          }\n          setStatuses(STATUSES.success)\n        }\n        catch (error) {\n          setStatuses(STATUSES.error);\n          setError(error);\n        }\n      }\n      getMovieBySearch();\n    }\n  },[searchText,hasMounted])\n\n  return <div>\n    <SearchForm onSubmit ={onSubmit} query={query}></SearchForm>\n    {statuses === STATUSES.pending && <div>Loading..</div>}\n    {statuses === STATUSES.error && error && <div>{error.message}</div>}\n    {searchedMovies && <MoviesList movies={searchedMovies}></MoviesList>}\n  </div>\n}\n\nexport default Movies;","import { Link, useLocation } from \"react-router-dom\"\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  console.log('moviesList location', location)\n  return (\n    <div>\n      <ul>\n        {movies.results.map(movieElem =>\n          <li key={movieElem.id}>\n            <Link state={{from: location}} to={`/movies/${movieElem.id}`}>{movieElem.title}</Link>\n          </li>)}\n      </ul>\n    </div>\n  )\n}"],"names":["SearchForm","_ref","onSubmit","query","_jsx","children","_jsxs","type","autoComplete","autoFocus","name","defaultValue","_useState","useState","_useState2","_slicedToArray","searchText","setSearchText","_useState3","_useState4","searchedMovies","setSearchedMovies","_useState5","STATUSES","_useState6","statuses","setStatuses","_useState7","_useState8","error","setError","_useState9","_useState10","hasMounted","setHasMounted","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","useEffect","getMovieBySearch","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getMovieByTitle","sent","results","length","t0","stop","apply","arguments","e","preventDefault","newSearchText","currentTarget","elements","value","trim","q","message","MoviesList","movies","location","useLocation","console","log","map","movieElem","Link","state","from","to","concat","id","title"],"sourceRoot":""}