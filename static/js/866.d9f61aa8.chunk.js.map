{"version":3,"file":"static/js/866.d9f61aa8.chunk.js","mappings":"yNA8CA,UA1CgB,SAAHA,GAAmB,IAAdC,EAAOD,EAAPC,QAChBC,GAAwCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAAgCL,EAAAA,EAAAA,UAASM,EAAAA,EAAAA,MAAcC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAhDG,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAA0BV,EAAAA,EAAAA,UAAS,MAAKW,GAAAT,EAAAA,EAAAA,GAAAQ,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAuBtB,OArBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEc,OAFdF,EAAAC,KAAA,EAEfb,EAAYH,EAAAA,EAAAA,SAAiBe,EAAAE,KAAA,GAEVC,EAAAA,EAAAA,IAAgB1B,GAAS,KAAD,EACf,KADtBsB,EAAIC,EAAAI,MACDC,QAAQC,QACfvB,EAAgBgB,EAAKM,SAGvBjB,EAAYH,EAAAA,EAAAA,SAAiBe,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAE7BZ,EAAYH,EAAAA,EAAAA,OACZO,EAAQQ,EAAAO,IAAQ,yBAAAP,EAAAQ,OAAA,GAAAV,EAAA,kBAEnB,kBAde,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KAeK,OAAjB5B,GACFY,GAEJ,GAAG,CAACZ,EAAcL,KAEXkC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACJ1B,IAAaF,EAAAA,EAAAA,UAAqB6B,EAAAA,EAAAA,KAAA,OAAAD,SAAK,eACvC1B,IAAaF,EAAAA,EAAAA,OAAkBM,IAASuB,EAAAA,EAAAA,KAAA,OAAAD,SAAMtB,EAAMwB,WAClDjC,GAAgBK,IAAaF,EAAAA,EAAAA,UAAqB6B,EAAAA,EAAAA,KAAA,OAAAD,SAAK,mBACzD/B,IACCgC,EAAAA,EAAAA,KAAA,MAAAD,SACG/B,EAAakC,KAAI,SAAAC,GAAM,OACtBN,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKI,EAAOC,UACZJ,EAAAA,EAAAA,KAAA,KAAAD,SAAII,EAAOE,YAFJF,EAAOG,GAGX,QAIf,C","sources":["Pages/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { STATUSES } from \"utils/Constans\";\nimport { getMovieReviews } from \"services/movieService\";\n\nconst Reviews = ({movieId}) => {\n  const [movieReviews, setMovieReviews] = useState(null);\n  const [statuses, setStatuses] = useState(STATUSES.idle);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        setStatuses(STATUSES.pending)\n\n        const data = await getMovieReviews(movieId);\n        if (data.results.length !== 0) {\n          setMovieReviews(data.results);\n        }\n\n        setStatuses(STATUSES.success)\n      } catch (error) {\n        setStatuses(STATUSES.error);\n        setError(error);\n      }\n    }\n    if (movieReviews === null) {\n      getReviews();\n    }\n  }, [movieReviews, movieId])\n\n  return <>\n    {statuses === STATUSES.pending  && <div>Loading...</div>}\n    {statuses === STATUSES.error && error && <div>{error.message}</div>}\n    {(!movieReviews && statuses === STATUSES.success) && <div>No reviews yet</div>}\n    {movieReviews &&\n      <ul>\n        {movieReviews.map(review => \n          <li key={review.id}>\n            <h3>{review.author}</h3>\n            <p>{review.content}</p>\n          </li>)}\n      </ul>\n    }\n  </>\n}\n\nexport default Reviews;"],"names":["_ref","movieId","_useState","useState","_useState2","_slicedToArray","movieReviews","setMovieReviews","_useState3","STATUSES","_useState4","statuses","setStatuses","_useState5","_useState6","error","setError","useEffect","getReviews","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getMovieReviews","sent","results","length","t0","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","message","map","review","author","content","id"],"sourceRoot":""}